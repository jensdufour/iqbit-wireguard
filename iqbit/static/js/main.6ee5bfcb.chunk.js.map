{"version":3,"sources":["../node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","utils/TorrClient.js","components/stateDictionary.js","utils/useInterval.js","components/TorrentInfo.js","components/TorrentBox.js","utils/Storage.js","components/LogoHeader.js","components/Torrents.js","components/TorrentsCol.js","searchAPIs/yts.js","components/Search.js","components/Settings.js","components/TorrentsTopControls.js","components/Tabs.js","components/TabletView.js","utils/useWindowSize.js","components/BottomSheet.js","utils/useMedia.js","utils/useLocalStorage.js","utils/useDarkMode.js","App.js","serviceWorker.js","index.js","images/logo_round.png","images/logo-YTS.svg","images/imagemissing.png","../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","serverAddress","window","location","origin","substring","length","console","log","baseURL","APICall","axios","create","withCredentials","login","a","username","password","get","params","getTorrents","sortKey","reverse","sort","sync","rid","resume","hash","hashes","resumeAll","pause","pauseAll","remove","deleteFiles","addTorrent","url","urls","getPrefs","updatePref","json","stateDictionary","error","long","short","missingFiles","uploading","pausedUP","queuedUP","stalledUP","checkingUP","forcedUP","allocating","downloading","metaDL","pausedDL","queuedDL","stalledDL","checkingDL","forceDL","checkingResumeData","moving","unknown","useInterval","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","StatsRow","props","className","title","data","item","key","value","icon","label","TorrentInfo","name","useState","torrent","setTorrent","resp","torrents","AmountRow","fileSize","downloaded","size","faDownload","downloaded_session","faPallet","uploaded","faUpload","uploaded_session","faPalletAlt","ratio","toFixed","faShareAlt","date","Date","setSeconds","eta","timeString","toISOString","substr","SpeedsRow","dlspeed","faTachometerAltFastest","faTachometerAltSlowest","upspeed","faStopwatch","DataRow","num_seeds","num_complete","faUserAstronaut","num_leechs","num_incomplete","faUserSecret","save_path","faFolderOpen","StateRow","state","faBolt","progress","secondaryValue","TorrentBox","filter","torrentData","actionLoading","setActionLoading","isDone","isPaused","statsIconStyle","color","isDL","marginRight","setTimeout","useContext","Context","installed","updateModal","open","options","modifier","onclick","torrentAction","setTorrentAction","undefined","deleteAlert","setDeleteAlert","style","paddingBottom","faCloudUpload","faCloudDownload","faTachometerAltFast","filesize","round","type","onClick","content","handleMoreButton","isOpen","isCancelable","onCancel","option","cancelable","removeFromFeed","saveStorage","localStorage","setItem","JSON","stringify","getItem","LogoHeader","alt","src","roundLogo","Torrents","settings","updateSettings","feedback","setFeedback","setUsername","setPassword","torrentList","setTorrentList","setTorrentData","initialLoad","setInitialLoad","setSort","needsFullRefresh","setNeedsRefresh","sortingObj","TorrentArray","hashArray","forEach","push","RID","setRID","loggedin","full_update","updatedObj","property","includes","play","masterButtonsLoading","setMasterButtonsLoading","fullData","segment","hashIndex","indexOf","listToUpdate","splice","htmlFor","onChange","event","target","placeholder","autoCapitalize","autoCorrect","autoComplete","response","userObject","catch","TorrentsCol","setSegment","SegmentPicker","mode","onIonChange","detail","YTSModalInfo","updateAlert","TorrentAttr","letter","otherInfo","language","faComments","rating","faMedal","runtime","genres","join","faFilm","downloadsStarted","setDownloadsStarted","title_long","thisTorrent","faTv","quality","faFilmCanister","seeds","faUsersClass","peers","faBox","faFolderDownload","class","encodeURI","handleDownload","description_full","yt_trailer_code","width","height","YTSSearch","searchTerm","setSearchTerm","searchLoading","setSearchLoading","searchResults","setSearchResults","searchReady","setSearchReady","submitQuery","limit","page","minimum_rating","query_term","genre","sorty_by","with_rt_ratings","moviesArray","movies","category","onKeyPress","role","backgroundImage","medium_cover_image","imageMissing","Search","logo","YTSLogo","categories","component","providers","selectedProvider","setSelectedProvider","selectedCategory","setSelectedCategory","Settings","prefs","preferences","setPreferences","prefsRefresh","setPrefsRefresh","SwitchRow","backgroundColor","checked","objKey","InputRow","setAlert","faEdit","alert","alertInput","faFolders","faMinusHexagon","faFolderMinus","faNetworkWired","faEthernet","faUserLock","faUserRobot","faKey","faPaintBrushAlt","faAngleRight","faWifi","faOutlet","faUser","reload","ref","defaultValue","updateJSON","textAlign","TorrentTopControls","addTorrentPopover","setAddTorrentPopover","bigScreen","AddButton","React","createRef","SortButton","torrentURL","setTorrentURL","handleAddTorrent","finally","AddTorrentModal","rows","selected","sortPopover","setSortPopover","top","innerHeight","getTarget","object","updateSorting","Tabs","activeTab","setActiveTab","pageTitles","obj","animation","position","onPreChange","index","renderTabs","activeIndex","active","tab","TabletView","RoundLogo","useWindowSize","windowSize","setWindowSize","handleResize","innerWidth","addEventListener","removeEventListener","BottomSheet","WindowSize","topDiff","leftDiff","left","setOpen","initialPosition","x","y","finalPosition","onDismiss","axis","handle","defaultPosition","children","bounds","onStop","pageY","useMedia","queries","values","mediaQueryLists","q","matchMedia","getValue","findIndex","mql","matches","setValue","handler","addListener","removeListener","useLocalStorage","initialValue","parse","storedValue","setStoredValue","valueToStore","Function","useDarkMode","enabledState","setEnabledState","prefersDarkMode","enabled","element","document","body","classList","add","createContext","App","setSettings","getStorage","screenWidth","add_trackers","add_trackers_enabled","alt_dl_limit","alt_up_limit","alternative_webui_enabled","alternative_webui_path","announce_ip","announce_to_all_tiers","announce_to_all_trackers","anonymous_mode","async_io_threads","auto_delete_mode","auto_tmm_enabled","autorun_enabled","autorun_program","banned_IPs","bittorrent_protocol","bypass_auth_subnet_whitelist","bypass_auth_subnet_whitelist_enabled","bypass_local_auth","category_changed_tmm_enabled","checking_memory_use","create_subfolder_enabled","current_interface_address","current_network_interface","dht","disk_cache","disk_cache_ttl","dl_limit","dont_count_slow_torrents","dyndns_domain","dyndns_enabled","dyndns_password","dyndns_service","dyndns_username","embedded_tracker_port","enable_coalesce_read_write","enable_embedded_tracker","enable_multi_connections_from_same_ip","enable_os_cache","enable_piece_extent_affinity","enable_upload_suggestions","encryption","export_dir","export_dir_fin","file_pool_size","incomplete_files_ext","ip_filter_enabled","ip_filter_path","ip_filter_trackers","limit_lan_peers","limit_tcp_overhead","limit_utp_rate","listen_port","locale","lsd","mail_notification_auth_enabled","mail_notification_email","mail_notification_enabled","mail_notification_password","mail_notification_sender","mail_notification_smtp","mail_notification_ssl_enabled","mail_notification_username","max_active_downloads","max_active_torrents","max_active_uploads","max_connec","max_connec_per_torrent","max_ratio","max_ratio_act","max_ratio_enabled","max_seeding_time","max_seeding_time_enabled","max_uploads","max_uploads_per_torrent","outgoing_ports_max","outgoing_ports_min","pex","preallocate_all","proxy_auth_enabled","proxy_ip","proxy_password","proxy_peer_connections","proxy_port","proxy_torrents_only","proxy_type","proxy_username","queueing_enabled","random_port","recheck_completed_torrents","resolve_peer_countries","rss_auto_downloading_enabled","rss_download_repack_proper_episodes","rss_max_articles_per_feed","rss_processing_enabled","rss_refresh_interval","rss_smart_episode_filters","save_path_changed_tmm_enabled","save_resume_data_interval","scan_dirs","schedule_from_hour","schedule_from_min","schedule_to_hour","schedule_to_min","scheduler_days","scheduler_enabled","send_buffer_low_watermark","send_buffer_watermark","send_buffer_watermark_factor","slow_torrent_dl_rate_threshold","slow_torrent_inactive_timer","slow_torrent_ul_rate_threshold","socket_backlog_size","start_paused_enabled","stop_tracker_timeout","temp_path","temp_path_enabled","torrent_changed_tmm_enabled","up_limit","upload_choking_algorithm","upload_slots_behavior","upnp","use_https","utp_tcp_mixed_mode","web_ui_address","web_ui_ban_duration","web_ui_clickjacking_protection_enabled","web_ui_csrf_protection_enabled","web_ui_custom_http_headers","web_ui_domain_list","web_ui_host_header_validation_enabled","web_ui_https_cert_path","web_ui_https_key_path","web_ui_max_auth_fail_count","web_ui_port","web_ui_secure_cookie_enabled","web_ui_session_timeout","web_ui_upnp","web_ui_use_custom_http_headers_enabled","web_ui_username","setPrefs","modal","setModal","message","Alert","Provider","update","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6ee5bfcb.chunk.js","sourcesContent":["var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t181,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 105;\nmodule.exports = webpackAsyncContext;","import axios from 'axios';\n\nlet serverAddress = window.location.origin;\n\nif(serverAddress.substring(serverAddress.length-1) !== \"/\"){\n  serverAddress = `${serverAddress}/`\n}\n\nconsole.log(serverAddress)\n\nconst baseURL = `${serverAddress}api/v2/`\n\nconst APICall = axios.create({\n  baseURL:baseURL,\n  withCredentials:true\n})\n\nexport const login = async ({username, password}) => {\n  return APICall.get('auth/login',{\n    params:{username,password}\n  })\n}\n\nexport const logout = () => {\n  return axios.get('auth/logout')\n}\n\nexport const getTorrents = async (sortKey = \"added_on\", reverse=true) => {\n  return APICall.get('torrents/info',{\n    params:{\n      sort:sortKey,\n      reverse,\n    }\n  })\n}\n\nexport const getProperties = async (hash) => {\n  return APICall.get('torrents/properties',{\n    params:{\n      hashes:hash\n    }\n  })\n}\n\nexport const sync = async (rid) => {\n\n  return APICall.get('sync/maindata',{\n    params:{\n      rid\n    }\n  })\n}\n\nexport const resume = async (hash=\"\") => {\n  return APICall.get('torrents/resume',{\n    params:{\n      hashes:hash\n    }\n  })\n}\n\nexport const resumeAll = async () => {\n  return APICall.get('torrents/resume',{\n    params:{\n      hashes:\"all\"\n    }\n  })\n}\n\nexport const pause = async (hash=\"\") => {\n  return APICall.get('torrents/pause',{\n    params:{\n      hashes:hash\n    }\n  })\n}\n\n\nexport const pauseAll = async () => {\n  return APICall.get('torrents/pause',{\n    params:{\n      hashes:\"all\"\n    }\n  })\n}\n\nexport const remove = async (hash=\"\",deleteFiles=false) => {\n  return APICall.get('torrents/delete',{\n    params:{\n      hashes:hash,\n      deleteFiles\n    }\n  })\n}\n\nexport const addTorrent = async (url=\"\") => {\n  return APICall.get('torrents/add',{\n    params:{\n      urls:url,\n    }\n  })\n}\n\nexport const getPrefs = async () => {\n  return APICall.get('app/preferences')\n}\n\nexport const updatePref = async (json={}) =>{\n  return APICall.get('app/setPreferences',{\n    params:{\n      json\n    },\n  })\n}\n","const stateDictionary = {\n  error : {\n    long:\"Some error occurred, applies to paused torrents\",\n    short:\"Error\"\n  },\n  missingFiles : {\n    long:\"Torrent data files is missing\",\n    short:\"Files Missing\"\n  },\n  uploading : {\n    long:\"Torrent is being seeded and data is being transferred\",\n    short:\"Seeding\"\n  },\n  pausedUP : {\n    long:\"Torrent is paused and has finished downloading\",\n    short:\"Paused / Done\"\n  },\n  queuedUP : {\n    long:\"Queuing is enabled and torrent is queued for upload\",\n    short:\"Queued For Seeding\"\n  },\n  stalledUP : {\n    long:\"Torrent is being seeded, but no connections were made\",\n    short:\"Available for Seeding\"\n  },\n  checkingUP : {\n    long:\"Torrent has finished downloading and is being checked\",\n    short:\"Checking Files\"\n  },\n  forcedUP : {\n    long:\"Torrent is forced to uploading and ignore queue limit\",\n    short:\"Force Uploading\",\n  },\n  allocating : {\n    long:\"Torrent is allocating disk space for download\",\n    short:\"Allocating Space\"\n  },\n  downloading : {\n    long:\"Torrent is being downloaded and data is being transferred\",\n    short:\"Downloading\"\n  },\n  metaDL : {\n    long:\"Torrent has just started downloading and is fetching metadata\",\n    short:\"Fetching Metadata\"\n  },\n  pausedDL : {\n    long:\"Torrent is paused and has NOT finished downloading\",\n    short:\"Paused\"\n  },\n  queuedDL : {\n    long:\"Queuing is enabled and torrent is queued for download\",\n    short:\"Queued for Download\"\n  },\n  stalledDL : {\n    long:\"Torrent is being downloaded, but no connection were made\",\n    short:\"Stalled\"\n  },\n  checkingDL : {\n    long:\"Same as checkingUP, but torrent has NOT finished downloading\",\n    short:\"Checking Files\"\n  },\n  forceDL : {\n    long:\"Torrent is forced to downloading to ignore queue limit\",\n    short:\"Force Downloading\"\n  },\n  checkingResumeData : {\n    long:\"Checking resume data on qBt startup\",\n    short:\"Checking Resume\"\n  },\n  moving : {\n    long:\"Torrent is moving to another location\",\n    short:\"Moving Location\",\n  },\n  unknown : {\n    long:\"Unknown status\",\n    short:\"Unknown\",\n  },\n}\n\nexport default stateDictionary;\n","import {useEffect,useRef} from \"react\";\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    const id = setInterval(tick, delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}\n\nexport default useInterval;\n","import React, {useState} from \"react\";\nimport {ProgressBar} from \"react-onsenui\";\nimport fileSize from \"filesize\";\nimport stateDictionary from './stateDictionary';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n    faBolt, faDownload,\n    faFolderOpen,\n    faPallet,\n    faPalletAlt,\n    faShareAlt,\n    faStopwatch,\n    faTachometerAltFastest,\n    faTachometerAltSlowest,\n    faUpload,\n    faUserAstronaut,\n    faUserSecret\n} from '@fortawesome/pro-regular-svg-icons'\nimport useInterval from \"../utils/useInterval\";\nimport {sync} from \"../utils/TorrClient\";\n\nconst TorrentInfo = (props) => {\n    const {item} = props;\n    const {name} = item\n    const {hash} = props\n\n    const [torrent,setTorrent] = useState(item)\n\n    useInterval(() => {\n        sync().then(resp => {\n            setTorrent(resp.data.torrents[hash])\n        });\n    },1000)\n\n    const AmountRow = [\n        {\n            value: `${fileSize(torrent.downloaded)} / ${fileSize(torrent.size)}`,\n            icon: faDownload,\n            label: \"Downloaded\"\n        },\n        {\n            value: fileSize(torrent.downloaded_session),\n            icon: faPallet,\n            label: \"Downloaded This Session\"\n        },\n        {\n            value: fileSize(torrent.uploaded),\n            icon: faUpload,\n            label: \"Uploaded\"\n        },\n        {\n            value: fileSize(torrent.uploaded_session),\n            icon: faPalletAlt,\n            label: \"Uploaded This Session\"\n        },\n        {\n            value: torrent.ratio?torrent.ratio.toFixed(2):0,\n            icon: faShareAlt,\n            label: \"Share Ratio\"\n        },\n    ]\n\n    const date = new Date(0);\n    date.setSeconds(torrent.eta); // specify value for SECONDS here\n    const timeString = date.toISOString().substr(11, 8);\n\n    const SpeedsRow = [\n        {\n            value: `${fileSize(torrent.dlspeed)}/s`,\n            icon: torrent.dlspeed > 0 ? faTachometerAltFastest : faTachometerAltSlowest,\n            label: \"Download Speed\"\n        },\n        {\n            value: `${fileSize(torrent.upspeed)}/s`,\n            icon: torrent.upspeed > 0 ? faTachometerAltFastest : faTachometerAltSlowest,\n            label: \"Download Speed\"\n        },\n        {\n            value: torrent.eta !== 8640000 ?\n                timeString\n                :0\n            ,\n            icon: faStopwatch,\n            label: \"Estimate Time Left\"\n        },\n    ]\n\n    const DataRow = [\n        {\n            value: `${torrent.num_seeds} (${torrent.num_complete})`,\n            icon: faUserAstronaut,\n            label: \"Seeds\"\n        },\n        {\n            value: `${torrent.num_leechs} (${torrent.num_incomplete})`,\n            icon: faUserSecret,\n            label: \"Leechs\"\n        },\n        {\n            value: torrent.save_path,\n            icon: faFolderOpen,\n            label: \"Save Path\"\n        },\n    ]\n\n    const StateRow = [\n        {\n            value: stateDictionary[torrent.state].short,\n            icon: faBolt,\n            label: stateDictionary[torrent.state].long\n        },\n    ]\n\n    return(\n        <div className={\"torrentInfoCol\"}>\n            <div>\n                <h2>{name}</h2>\n                <div>\n                    <span className={\"ProgressAmount\"}>{(torrent.progress*100).toFixed(1)}%</span>\n                    <ProgressBar\n                        value={torrent.progress*100}\n                        secondaryValue={100}\n                    />\n                </div>\n            </div>\n            <StatsRow data={StateRow} title={\"CurrentState\"}/>\n            <StatsRow data={DataRow} title={\"Metadata\"}/>\n            <StatsRow data={SpeedsRow} title={\"Speeds\"}/>\n            <StatsRow data={AmountRow} title={\"Amounts\"}/>\n        </div>\n    )\n}\n\nexport const StatsRow = (props) => {\n    return(\n        <div className={\"infoStatsRowWrapper\"}>\n            <div className={\"infoTitleBox\"}>\n                <h3>{props.title}</h3>\n            </div>\n            <div className={\"infoStatsRow\"}>\n                {props.data.map((item,key) =>\n                    <div className={\"infoStatBox\"} key={key}>\n                        <h4 className={\"infoStat\"}>{item.value}</h4>\n                        <div>\n                            <FontAwesomeIcon className={\"infoStatIcon\"} icon={item.icon}/>\n                            <span className={\"infoStatLabel\"}>{item.label}</span>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default TorrentInfo;\n","import React, {useContext, useEffect, useState} from 'react';\nimport {ActionSheet, ActionSheetButton, AlertDialog, AlertDialogButton, Icon, ProgressBar} from 'react-onsenui';\nimport stateDictionary from './stateDictionary';\nimport {pause, remove, resume} from '../utils/TorrClient';\nimport filesize from \"filesize\"\nimport {IonSpinner} from \"@ionic/react\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faCloudDownload, faCloudUpload, faTachometerAltFast} from \"@fortawesome/pro-regular-svg-icons\";\nimport {Context} from \"../App\";\nimport TorrentInfo from \"./TorrentInfo\";\n\nconst TorrentBox = (props) => {\n\n    const item = props.item;\n    const hash = props.hash;\n    const {name} = item;\n\n    const {filter} = props;\n\n    // const {syncData} = useContext(Context)\n\n    const torrentData = item;\n\n    const {progress} = torrentData || 0\n    const {eta} = torrentData || 0\n    const {state} = torrentData || \"\"\n    const {num_leechs} = torrentData || 0\n    const {num_seeds} = torrentData || 0\n    const {upspeed} = torrentData || 0\n    const {dlspeed} = torrentData || 0\n\n    const [actionLoading, setActionLoading] = useState(false)\n\n    const date = new Date(0);\n    date.setSeconds(eta); // specify value for SECONDS here\n    const timeString = eta ? date.toISOString().substr(11, 8) : 0;\n\n    const isDone = () => {\n        return !!progress>=1;\n    }\n\n    const isPaused = () => {\n        switch (state) {\n            case \"pausedDL\" :\n                return true;\n            case \"pausedUP\" :\n                return true;\n            default:\n                return false;\n        }\n    }\n\n    const isDL = () => {\n        switch (state) {\n            case \"downloading\" :\n                return true;\n            case \"metaDL\" :\n                return true;\n            case \"queuedDL\" :\n                return true;\n            case \"stalledDL\" :\n                return true;\n            case \"checkingDL\" :\n                return true;\n            case \"forceDL\" :\n                return true;\n            case \"checkingResumeData\" :\n                return true;\n            case \"allocating\" :\n                return true;\n            default:\n                return false;\n        }\n    }\n\n    const statsIconStyle = {\n        color: isDL() ? \"#0076ff\" : \"#b2b2b2\",\n        marginRight: 5,\n    }\n\n    useEffect(() => {\n        if (actionLoading) {\n            setTimeout(() => {\n                setActionLoading(false)\n            }, 1000)\n        }\n    }, [actionLoading])\n\n    const {installed, updateModal} = useContext(Context)\n\n    const [torrentAction, setTorrentAction] = useState({\n        open: false,\n        options: [{\n            label: \"More Info\",\n            modifier: null,\n            onclick: () => false,\n        },\n            {\n                label: \"Remove Torrent\",\n                modifier: \"destructive\",\n                onclick: () => false,\n            },\n        ]\n    })\n\n    const [deleteAlert, setDeleteAlert] = useState({\n        open: false,\n        hash: undefined,\n    })\n\n    const handleMoreButton = (hash, item) => {\n        setTorrentAction({\n            open: true,\n            options: [\n                {\n                    label: \"Remove Torrent\",\n                    modifier: \"destructive\",\n                    onclick: () => setDeleteAlert({open: true, hash}),\n                },\n                {\n                    label: \"More Info\",\n                    modifier: null,\n                    onclick: () => updateModal({open: true, content: <TorrentInfo item={item} hash={hash}/>}),\n                },\n            ]\n        })\n    }\n\n    if (\n        (filter === \"downloading\" && progress < 1)\n        || (filter === \"complete\" && progress === 1)\n        || (filter === \"all\")\n    ) {\n        return (\n            <>\n                <div className=\"torrentBox\">\n                    <h3>{name}</h3>\n                    <div className=\"stats\">\n                        <span>{(progress * 100).toFixed(0)}%</span>\n                        {eta !== 8640000 ? <span>{timeString}</span> : <span>{stateDictionary[state].short}</span>}\n                    </div>\n                    <ProgressBar\n                        style={{paddingBottom: 10}}\n                        value={progress * 100}\n                        secondaryValue={100}\n                    />\n                    <div className=\"details\">\n                        <div className=\"statsRow\">\n                            <span>\n                                <FontAwesomeIcon\n                                    style={statsIconStyle}\n                                    icon={isDone() ? faCloudUpload : faCloudDownload}\n                                />\n                                <span className={\"data\"}>\n                                  {isDone() ? num_leechs : num_seeds}\n                                </span>\n                            </span>\n                            <span>\n                                <FontAwesomeIcon\n                                    style={statsIconStyle}\n                                    icon={faTachometerAltFast}\n                                />\n                                <span className={\"data\"}>\n                                    {isPaused() || isDone() ? \"0\" : filesize(isDone() ? upspeed : dlspeed, {round: 1}) + \"/s\"}\n                                </span>\n                            </span>\n                        </div>\n                        {\n                            actionLoading ?\n                                <IonSpinner name={\"lines\"}/>\n                                : <div className=\"buttonsRow\">\n                                    <button\n                                        type=\"button\"\n                                        onClick={() => handleMoreButton(hash, item)}\n                                    >\n                                        <Icon size={30} icon=\"ion-ios-more\"/>\n                                    </button>\n\n                                    <button\n                                        className={isPaused() ? \"active\" : null}\n                                        type=\"button\"\n                                        onClick={() => {\n                                            setActionLoading(true)\n                                            isPaused()?resume(hash):pause(hash)\n                                        }}\n                                    >\n                                        <Icon size={30} icon=\"ion-ios-pause\"/>\n                                    </button>\n\n                                </div>\n                        }\n                    </div>\n                </div>\n\n                {\n                    torrentAction.open ?\n                        <ActionSheet\n                            className={installed ? \"installed\" : null}\n                            isOpen={torrentAction.open}\n                            isCancelable={true}\n                            onCancel={() => setTorrentAction({open: false, options: torrentAction.options})}\n                        >\n                            {\n                                torrentAction.options.map((option, key) =>\n                                    <ActionSheetButton\n                                        key={key}\n                                        modifier={option.modifier}\n                                        onClick={() => {\n                                            setTorrentAction({open: false, options: torrentAction.options})\n                                            option.onclick()\n                                        }}\n                                    >{option.label}</ActionSheetButton>)\n                            }\n\n                            <ActionSheetButton\n                                onClick={() =>\n                                    setTorrentAction({\n                                        open: false,\n                                        options: torrentAction.options\n                                    })\n                                }>Cancel\n                            </ActionSheetButton>\n                        </ActionSheet> : null\n\n                }\n\n                {deleteAlert.open ?\n                    <AlertDialog\n                        isOpen={deleteAlert.open}\n                        onCancel={() => setDeleteAlert({open: false})}\n                        cancelable\n                    >\n                        <div className=\"alert-dialog-title\">Delete Files</div>\n                        <div className=\"alert-dialog-content\">\n                            Would you also like to delete the files downloaded?\n                        </div>\n                        <div className=\"alert-dialog-footer\">\n\n                            <AlertDialogButton\n                                onClick={() => {\n                                    setDeleteAlert({open: false});\n                                    remove(deleteAlert.hash, true);\n                                    props.removeFromFeed(hash)\n                                }}\n                                className={\"danger\"}\n                            >\n                                Yes, Delete Files\n                            </AlertDialogButton>\n\n                            <AlertDialogButton\n                                onClick={() => {\n                                    setDeleteAlert({open: false});\n                                    remove(deleteAlert.hash, false);\n                                    props.removeFromFeed(hash)\n                                }}\n                            >\n                                No, Keep Files\n                            </AlertDialogButton>\n\n                            <AlertDialogButton onClick={() => setDeleteAlert({open: false})}>Cancel</AlertDialogButton>\n                        </div>\n                    </AlertDialog> : null\n                }\n            </>\n        )\n    } else {\n        return null\n    }\n}\n\nexport default TorrentBox;\n","export const getStorage = (key=\"\") => {\n  return JSON.parse(localStorage.getItem(key));\n}\n\nexport const saveStorage = async (key=\"\",value={}) => {\n  new Promise ( (resolve) => {\n    localStorage.setItem(key,JSON.stringify(value));\n    setInterval(()=>{\n      if(localStorage.getItem(key) !== undefined){\n        resolve()\n      }\n    },100)\n  })\n}\n","import roundLogo from \"../images/logo_round.png\";\nimport React from \"react\";\n\nconst LogoHeader = () => {\n    return (\n        <div className=\"LogoHeader\">\n            <img className=\"loginImage\" alt=\"iQbit logo\" src={roundLogo}/>\n            <span className={\"iqbit\"}>iQbit</span>\n            <span className={\"poweredBy\"}>Powered by qBitTorrent</span>\n            <hr/>\n        </div>\n    )\n}\n\nexport default LogoHeader;\n","import React, {useState, useContext, useEffect} from 'react';\nimport {Button, Icon} from 'react-onsenui';\nimport {sync, login, getTorrents, pauseAll, resumeAll} from '../utils/TorrClient';\nimport TorrentBox from './TorrentBox';\nimport {Context} from \"../App\"\nimport {saveStorage} from '../utils/Storage';\nimport LogoHeader from \"./LogoHeader\";\nimport useInterval from \"../utils/useInterval\";\nimport {IonSpinner} from \"@ionic/react\";\n\nconst Torrents = (props) => {\n    const {settings, updateSettings} = useContext(Context);\n\n    const [feedback, setFeedback] = useState(null)\n    const [username, setUsername] = useState(undefined)\n    const [password, setPassword] = useState(undefined)\n\n    const [torrentList, setTorrentList] = useState([])\n    const [torrentData, setTorrentData] = useState({})\n    const [initialLoad,setInitialLoad] = useState(false)\n    const [sort,setSort] = useState({key:\"added_on\",reverse:true})\n    const [needsFullRefresh, setNeedsRefresh] = useState(false);\n\n    useEffect(() => {\n        setSort(props.sortingObj)\n        setNeedsRefresh(true)\n    },[props.sortingObj])\n\n    useEffect(()=>{\n        if(initialLoad && needsFullRefresh){\n            getTorrents(sort.key,sort.reverse).then( resp => {\n                const TorrentArray =  resp.data;\n                let hashArray = [];\n\n                TorrentArray.forEach((torrent) => {\n                    hashArray.push(torrent.hash)\n                })\n\n                setTorrentList(hashArray);\n                setNeedsRefresh(false);\n            })\n        }\n    },[needsFullRefresh])\n\n\n    const [RID, setRID] = useState(0)\n\n    useInterval(() => {\n        if (settings.loggedin) {\n\n            sync(RID).then(resp => {\n                const {data} = resp\n\n                if (data.full_update) {\n                    setTorrentData(data.torrents);\n\n                    getTorrents(sort.key,sort.reverse).then( resp => {\n                        const TorrentArray =  resp.data;\n                        let hashArray = [];\n\n                        TorrentArray.forEach((torrent) => {\n                            hashArray.push(torrent.hash)\n                        })\n\n                        setTorrentList(hashArray);\n                        setNeedsRefresh(false);\n                    })\n\n                } else {\n\n                    if (data.torrents) {\n                        let updatedObj = torrentData;\n\n                        const keysArray = Object.keys(data.torrents);\n\n                        keysArray.forEach((hash) => {\n\n                            if (!updatedObj[hash]) {\n                                updatedObj[hash] = {};\n                            }\n\n                            const properties = Object.keys(data.torrents[hash]);\n\n                            properties.forEach((property) => {\n                                updatedObj[hash][property] = data.torrents[hash][property]\n                            })\n\n                            if(!torrentList.includes(hash)){\n                                setTorrentList([hash,...torrentList])\n                            }\n                        })\n\n                        setTorrentData(updatedObj);\n                    }\n\n                }\n\n                setRID(RID + 1)\n\n                if(RID === 0){\n                    setInitialLoad(true)\n                }\n            });\n        }\n    }, 1000)\n\n    const handleSignin = () => {\n\n        login({username, password}).then(response => {\n\n            if (response.data === \"Ok.\") {\n\n                const userObject = {\n                    username,\n                    password,\n                    loggedin: true,\n                };\n\n                saveStorage(\"user\", userObject).then(() => {\n                    updateSettings(userObject)\n                })\n\n            } else {\n                setFeedback(\"Login Unauthorized.\")\n            }\n\n        }).catch(() => {\n            setFeedback(\"Too many login attempts. This IP is temporarily blocked. You can restart qBitTorrent to reset this.\")\n        })\n    }\n\n    const LoginForm = () => {\n        return (\n            <div className={\"torrentBox login\"}>\n                <LogoHeader/>\n                <h2 className=\"centered\">Welcome To Your WebUI</h2>\n                <div className=\"inputGroup\">\n                    <label htmlFor=\"username-input\">\n                        <span>Username</span>\n                        <input\n                            id=\"username-input\"\n                            type=\"text\"\n                            onChange={(event) => setUsername(event.target.value)}\n                            placeholder=\"Username\"\n                            autoCapitalize={\"none\"}\n                            autoCorrect={\"none\"}\n                            autoComplete={\"none\"}\n                        />\n                    </label>\n                    <label htmlFor=\"password-input\">\n                        <span>Password</span>\n                        <input\n                            id=\"password-input\"\n                            type=\"password\"\n                            onChange={(event) => setPassword(event.target.value)}\n                            placeholder=\"Password\"/>\n                    </label>\n                </div>\n                {feedback ? <p className=\"feedback\">{feedback}</p> : null}\n                <Button modifier=\"large--quiet\" onClick={() => handleSignin()}>\n                    Sign In\n                </Button>\n            </div>\n        )\n    }\n\n    const removeFromFeed = (hash) => {\n        const hashIndex = torrentList.indexOf(hash);\n        const listToUpdate = torrentList;\n        listToUpdate.splice(hashIndex,1);\n        setTorrentList(listToUpdate);\n    }\n\n    const [masterButtonsLoading,setMasterButtonsLoading] = useState({\n        pause:false,\n        play:false,\n    })\n\n    useEffect(()=>{\n        if(masterButtonsLoading.pause){\n            setTimeout(()=>{\n                setMasterButtonsLoading({\n                    pause: false,\n                    play: masterButtonsLoading.play\n                })\n            },1500)\n        }\n\n        if(masterButtonsLoading.play){\n            setTimeout(()=>{\n                setMasterButtonsLoading({\n                    pause: masterButtonsLoading.pause,\n                    play: false\n                })\n            },1500)\n        }\n    },[masterButtonsLoading])\n\n    return (\n        <>\n            {\n                settings.loggedin ?\n                    <div className={\"torrentBox compact\"}>\n                        <div className=\"buttonsRow\">\n\n                            {\n                                masterButtonsLoading.pause ?\n                                    <IonSpinner name={\"lines\"}/> :\n                                    <button\n                                        type=\"button\"\n                                        onClick={() => {\n                                            pauseAll()\n                                            setMasterButtonsLoading({\n                                                pause: true,\n                                                play: masterButtonsLoading.play\n                                            })\n                                        }}\n                                    >\n                                        <Icon size={30} icon=\"ion-ios-pause\"/>\n                                    </button>\n                            }\n\n                            {\n                                masterButtonsLoading.play ?\n                                    <IonSpinner name={\"lines\"}/> :\n                                    <button\n                                        type=\"button\"\n                                        onClick={() => {\n                                            resumeAll()\n                                            setMasterButtonsLoading({\n                                                pause: masterButtonsLoading.pause,\n                                                play: true\n                                            })\n                                        }}\n                                    >\n                                        <Icon size={30} icon=\"ion-ios-play\"/>\n                                    </button>\n                            }\n\n                        </div>\n                    </div>\n                    : null\n            }\n\n            {\n                settings.loggedin ?\n                    torrentList.map((hash) =>\n                        <TorrentBox\n                            item={torrentData[hash]}\n                            fullData={torrentData}\n                            key={hash}\n                            hash={hash}\n                            filter={props.segment}\n                            removeFromFeed={(hash)=>{removeFromFeed(hash)}}\n                        />)\n                    : null\n            }\n\n            {settings.loggedin ? null : LoginForm()}\n\n        </>\n\n    )\n}\n\nexport default Torrents\n","import React, {useContext, useEffect, useState} from \"react\";\nimport {IonLabel, IonSegment, IonSegmentButton} from \"@ionic/react\";\nimport Torrents from \"./Torrents\";\nimport {Context} from \"../App\";\n\nconst TorrentsCol = (props) => {\n    const {settings} = useContext(Context)\n\n    const [segment,setSegment] = useState(\"all\");\n\n    const SegmentPicker = () => {\n\n        if(settings.loggedin){\n            return(\n                <div className={\"segmentPicker\"}>\n                    <IonSegment mode={\"ios\"} value={segment} onIonChange={e => {\n                        setTimeout(()=>{\n                            setSegment(e.detail.value)\n                        },200)\n                    }}>\n                        <IonSegmentButton mode={\"ios\"} value=\"all\">\n                            <IonLabel>All Torrents</IonLabel>\n                        </IonSegmentButton>\n                        <IonSegmentButton mode={\"ios\"} value=\"complete\">\n                            <IonLabel>Complete</IonLabel>\n                        </IonSegmentButton>\n                        <IonSegmentButton mode={\"ios\"} value=\"downloading\">\n                            <IonLabel>Downloading</IonLabel>\n                        </IonSegmentButton>\n                    </IonSegment>\n                </div>\n            )\n        }else{\n            return null\n        }\n    }\n\n    return(\n        <div  className={\"torrentsCol\"}>\n            <SegmentPicker/>\n            <Torrents sortingObj={props.sortingObj} segment={segment}/>\n        </div>\n    )\n}\n\nexport default TorrentsCol\n","import {Fab, Icon, Button, SearchInput} from \"react-onsenui\";\nimport React, {useContext, useState} from \"react\";\nimport {IonSpinner} from \"@ionic/react\";\nimport axios from \"axios\";\nimport imageMissing from \"../images/imagemissing.png\"\nimport {Context} from \"../App\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {addTorrent} from \"../utils/TorrClient\";\nimport {\n    faBox,\n    faFilmCanister,\n    faMedal,\n    faTv,\n    faUserAstronaut,\n    faUsersClass,\n    faComments, faStopwatch, faFilm\n    ,faFolderDownload\n} from \"@fortawesome/pro-regular-svg-icons\";\n\n\nconst YTSSearch = (props) => {\n    const {updateModal} = useContext(Context)\n    const [searchTerm,setSearchTerm] = useState(undefined)\n    const [searchLoading,setSearchLoading] = useState(false)\n    const [searchResults,setSearchResults] = useState([])\n    const [searchReady,setSearchReady] = useState(false);\n\n    const submitQuery = () => {\n        setSearchLoading(true);\n        axios.get(\"https://yts.mx/api/v2/list_movies.json\",{\n            params:{\n                limit:null,                     //Integer between 1 - 50 (inclusive)\n                page:null,                      //Integer (Unsigned)\n                quality:null,                   //String (720p, 1080p, 2160p, 3D)\n                minimum_rating:null,            //Integer between 0 - 9 (inclusive)\n                query_term:searchTerm,          //String\n                genre:null,                     //String from http://www.imdb.com/genre/\n                sorty_by:null,                  //String (title, year, rating, peers, seeds, download_count, like_count, date_added)\n                with_rt_ratings:true,           //Bool\n            }\n        }).then(response => {\n            const moviesArray = response.data.data.movies\n            setSearchResults(moviesArray);\n            setSearchLoading(false);\n            setSearchReady(true);\n        })\n    }\n\n    return (\n        <div>\n            <div className={\"searchInputRow\"}>\n                <SearchInput\n                    className={\"searchInput\"}\n                    style={{height:\"100%\"}}\n                    placeholder={`Search ${props.category}`}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    onKeyPress={(e) => e.key===\"Enter\"? submitQuery(searchTerm) : null}\n                />\n                {\n                    searchLoading ? <IonSpinner name={\"lines\"}/> :\n                        <Fab modifier={\"mini\"} onClick={()=>submitQuery(searchTerm)}>\n                            <Icon icon={\"ion-ios-search\"} size={25} />\n                        </Fab>\n                }\n            </div>\n            <div className={\"searchResults\"}>\n                {\n                    searchReady?\n                        searchResults ?\n                        searchResults.map((item,key) =>\n                            <div\n                                role={\"button\"}\n                                className={\"MoviePoster\"}\n                                key={key}\n                                style={{\n                                    backgroundImage: `url(${item.medium_cover_image}), url(${imageMissing})`,\n                                }}\n                                onClick={()=>{\n                                    updateModal({open: true,content:<YTSModalInfo item={item}/>})\n                                }}\n                            >\n                                <span>{item.title}</span>\n                            </div>\n\n                        )\n                            :<div>No results were found for that search</div>\n                        :null\n                }\n            </div>\n        </div>\n    )\n}\n\nexport const YTSModalInfo = (props) => {\n    const { item } = props\n    const {updateAlert} = useContext(Context)\n\n    const TorrentAttr = (props) => {\n        return (\n            <span className={\"infoTorrentAttr\"}>\n                <FontAwesomeIcon className={\"infoStatIcon\"} icon={props.icon} style={{marginRight:props.letter?2:null}}/>\n                {props.letter?<span className={\"infoStatIcon\"}>{props.letter}</span>:null}\n                <span>{props.value}</span>\n            </span>\n        )\n    }\n\n    const otherInfo = [\n        {\n            value: item.language,\n            icon: faComments,\n            label: \"Language\"\n        },\n        {\n            value: item.rating,\n            icon: faMedal,\n            label: \"Ratings\"\n        },\n        {\n            value: item.runtime+\" Minutes\",\n            icon: faStopwatch,\n            label: \"Runtime\"\n        },\n        {\n            value: item.genres.join(\", \"),\n            icon: faFilm,\n            label: \"Genres\"\n        },\n    ]\n\n    const [downloadsStarted,setDownloadsStarted] = useState([])\n\n    const handleDownload = (torrent,title,key) =>{\n\n        addTorrent(encodeURI(`magnet:?xt=urn:btih:${torrent.hash}&dn=${title}&udp://open.demonii.com:1337/announce&udp://tracker.openbittorrent.com:80&udp://tracker.coppersurfer.tk:6969&udp://glotorrents.pw:6969/announce&udp://tracker.opentrackr.org:1337/announce&udp://torrent.gresille.org:80/announce&udp://p4p.arenabg.com:1337&udp://tracker.leechers-paradise.org:6969`))\n        .then(response=>{\n            if(response.data === \"Ok.\"){\n                setDownloadsStarted([...downloadsStarted, key])\n            }else{\n                updateAlert(\"Could Not Add Torrent\",\"This address could not be added.\")\n            }\n        })\n    };\n\n    return (\n        <div className={\"torrentInfoCol\"}>\n            <div>\n                <h2>{item.title_long}</h2>\n                <hr/>\n            </div>\n            <div className={\"infoStatsRowWrapper\"}>\n                <div className={\"infoTitleBox\"}>\n                    <h3>Torrents</h3>\n                </div>\n                <div className={\"infoStatsRow\"}>\n                    {item.torrents.map((thisTorrent,key) =>\n                        <div className={\"infoStatBox flex-row w100\"} key={key}>\n                            <div className={\"attrBox\"}>\n                                <TorrentAttr icon={faTv} value={thisTorrent.quality}/>\n                                <TorrentAttr icon={faFilmCanister} value={thisTorrent.type}/>\n                                <TorrentAttr icon={faUserAstronaut} value={thisTorrent.seeds} letter={\"S\"}/>\n                                <TorrentAttr icon={faUsersClass} value={thisTorrent.peers} letter={\"P\"}/>\n                                <TorrentAttr icon={faBox} value={thisTorrent.size}/>\n                            </div>\n                            {\n                                downloadsStarted.includes(key) ?\n                                    <FontAwesomeIcon className={\"downloadStarted\"} icon={faFolderDownload}/>\n                                    :\n                                    <Button class={\"downloadBtn\"}\n                                            onClick={() => handleDownload(thisTorrent, item.title_long, key)}\n                                    >\n                                        Download\n                                    </Button>\n\n                            }\n                        </div>\n                    )}\n                </div>\n            </div>\n            <div className={\"infoStatsRowWrapper\"}>\n                <div className={\"infoTitleBox\"}>\n                    <h3>Description</h3>\n                </div>\n                <p>{item.description_full}</p>\n            </div>\n            <div className={\"infoStatsRowWrapper\"}>\n                <div className={\"infoTitleBox\"}>\n                    <h3>Other Info</h3>\n                </div>\n                <div className={\"infoStatsRow\"}>\n                    {otherInfo.map((item,key) =>\n                        <div className={\"infoStatBox\"} key={key}>\n                            <h4 className={\"infoStat\"}>{item.value}</h4>\n                            <div>\n                                <FontAwesomeIcon className={\"infoStatIcon\"} icon={item.icon}/>\n                                <span className={\"infoStatLabel\"}>{item.label}</span>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n            {\n                item.yt_trailer_code===\"\"?null:\n                    <div className={\"infoStatsRowWrapper\"}>\n                        <div className={\"infoTitleBox\"}>\n                            <h3>Movie Trailer</h3>\n                        </div>\n                        <iframe\n                            className={\"movieTrailer\"}\n                            title={\"Movie Trailer\"}\n                            width=\"100%\" height=\"450\"\n                            src={\"https://www.youtube.com/embed/\"+item.yt_trailer_code}\n                        />\n                    </div>\n\n            }\n        </div>\n    )\n}\n\nexport default YTSSearch;\n","import React,{useState} from 'react';\nimport YTSLogo from \"../images/logo-YTS.svg\"\nimport YTSSearch from \"../searchAPIs/yts\";\n\nconst Search = (props) =>{\n\n    const [providers] = useState([\n      {\n          logo:YTSLogo,\n          name:\"YTS\",\n          categories:[\"Movies\"],\n          component:(props)=>YTSSearch(props)\n      },\n    ])\n\n    const [selectedProvider,setSelectedProvider] = useState(0)\n    const [selectedCategory,setSelectedCategory] = useState(0)\n\n    return (\n    <div className=\"searchCol\" {...props}>\n        <h3>Select Search Provider</h3>\n        <p>Warning: Be sure to comply with your country's copyright laws when downloading torrents from any of these search engines.</p>\n        <div className={\"providerRow\"}>\n            {providers.map((item,key) =>\n                <button className={key===selectedProvider?\"providerBox active\":\"providerBox\"} key={key} onClick={()=>setSelectedProvider(key)}>\n                    <img alt={\"YTS Logo\"} src={item.logo}/>\n                </button>\n            )}\n        </div>\n        {\n            providers[selectedProvider].categories.length > 1?\n                <div className={\"categoriesRow\"}>\n                    {providers[selectedProvider].categories.map((item,key) =>\n                        <button className={key===selectedCategory?\"categoryBox active\":\"providerBox\"} key={key} onClick={()=>setSelectedCategory(key)}>\n                            <p>{item}</p>\n                        </button>\n                    )}\n                </div>:null\n        }\n        {\n            providers[selectedProvider].component({\n                category:providers[selectedProvider].categories[selectedCategory]\n            })\n        }\n    </div>\n    )\n}\n\nexport default Search\n","import React, {useContext, useEffect, useRef, useState} from 'react';\nimport {List, ListItem, ListHeader, Switch, AlertDialog, Button} from \"react-onsenui\"\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport {\n    faAngleRight,\n    faEdit, faEthernet,\n    faFolderDownload, faFolderMinus,\n    faFolders, faKey,\n    faMinusHexagon, faMoonStars, faNetworkWired, faOutlet, faPaintBrushAlt,\n    faUser, faUserLock, faUserRobot, faUsersClass, faWifi\n} from \"@fortawesome/pro-solid-svg-icons\";\nimport {getPrefs, updatePref} from \"../utils/TorrClient\";\nimport {Context} from \"../App\";\nimport {saveStorage} from \"../utils/Storage\";\n\nconst Settings = (props) =>{\n\n    const {settings,updateAlert,prefs} = useContext(Context)\n    const [preferences,setPreferences] = useState(prefs)\n    const [prefsRefresh,setPrefsRefresh] = useState(true)\n\n    useEffect(()=>{\n        if(prefsRefresh){\n            getPrefs().then(response=>{\n                setPreferences(response.data)\n                setPrefsRefresh(false);\n            })\n        }\n    },[prefsRefresh,settings.loggedin,prefs])\n\n    const SwitchRow = (props) =>{\n        return(\n            <ListItem>\n                <div className=\"center\">\n                    <div className={\"iconBox\"} style={{backgroundColor:props.color?props.color:\"#636363\"}}>\n                        <FontAwesomeIcon icon={props.icon}/>\n                    </div>\n                    {props.title}\n                </div>\n                <div className=\"right\">\n                    <Switch checked={preferences[props.objKey]} onChange={()=>{\n                        updatePref(`{\"${props.objKey}\":${!preferences[props.objKey]}}`).then(()=>{\n                            setTimeout(()=>{\n                                let updatedObj = {...preferences}\n                                updatedObj[props.objKey] = !preferences[props.objKey];\n                                setPreferences(updatedObj)\n                            },350)\n                        }).catch(()=>{\n                            setPrefsRefresh(true);\n                            updateAlert(\"Settings Update Failed\",\"Settings could not be updated\")\n                        })\n                    }}/>\n                </div>\n                SubFolders\n            </ListItem>\n        )\n    }\n\n    const InputRow = (props) =>{\n        return(\n            <ListItem\n                onClick={()=>setAlert({open: true,label: props.title, objKey:props.objKey})}\n            >\n                <div className=\"center\">\n                    <div className={\"iconBox\"} style={{backgroundColor:props.color?props.color:\"#636363\"}}>\n                        <FontAwesomeIcon icon={props.icon}/>\n                    </div>\n                    {props.title}\n                </div>\n                <div className=\"right\">\n                    <FontAwesomeIcon icon={faEdit}/>\n                </div>\n                SubFolders\n            </ListItem>\n        )\n    }\n\n    const [alert,setAlert] = useState({\n        open:false,\n        label:\"\",\n        objKey:\"\"\n    })\n\n    let alertInput = useRef()\n\n    if(settings.loggedin){\n        return (\n        <div className={\"settingsCol\"}>\n            <List modifier={\"inset\"}>\n                <ListHeader>\n                    Downloads\n                </ListHeader>\n                <SwitchRow\n                    title={\"Create SubFolders\"}\n                    icon={faFolders}\n                    objKey={\"create_subfolder_enabled\"}\n                    color={\"#006ce2\"}\n                />\n                <SwitchRow\n                    title={\"Start Torrent Paused\"}\n                    icon={faMinusHexagon}\n                    objKey={\"start_paused_enabled\"}\n                    color={\"#bf0000\"}\n                />\n            </List>\n            <List modifier={\"inset\"}>\n                <ListHeader>\n                    Paths\n                </ListHeader>\n                <InputRow\n                    title={\"Default Save Path\"}\n                    icon={faFolderDownload}\n                    objKey={\"save_path\"}\n                    color={\"#2ca700\"}\n                />\n                <SwitchRow\n                    title={\"Temp Folder\"}\n                    icon={faFolderMinus}\n                    objKey={\"temp_path_enabled\"}\n                    color={\"#5b00b6\"}\n                />\n            </List>\n            <List modifier={\"inset\"}>\n                <ListHeader>\n                    Proxy\n                </ListHeader>\n                <InputRow\n                    title={\"Host\"}\n                    icon={faNetworkWired}\n                    objKey={\"proxy_ip\"}\n                    color={\"#00a799\"}\n                />\n                <InputRow\n                    title={\"Port\"}\n                    icon={faEthernet}\n                    objKey={\"proxy_port\"}\n                    color={\"#b600a4\"}\n                />\n                <SwitchRow\n                    title={\"Proxy Peer Connections\"}\n                    icon={faUsersClass}\n                    objKey={\"proxy_peer_connections\"}\n                    color={\"#ea9d00\"}\n                />\n                <SwitchRow\n                    title={\"Proxy Auth Enabled\"}\n                    icon={faUserLock}\n                    objKey={\"proxy_auth_enabled\"}\n                    color={\"#b7ea00\"}\n                />\n                <InputRow\n                    title={\"Proxy Username\"}\n                    icon={faUserRobot}\n                    objKey={\"proxy_username\"}\n                    color={\"#ea5200\"}\n                />\n                <InputRow\n                    title={\"Proxy Password\"}\n                    icon={faKey}\n                    objKey={\"proxy_password\"}\n                    color={\"#ea5200\"}\n                />\n            </List>\n\n            <List modifier={\"inset\"}>\n                <ListHeader>\n                    WebUI\n                </ListHeader>\n                <SwitchRow\n                    title={\"Custom WebUI Enabled\"}\n                    icon={faPaintBrushAlt}\n                    objKey={\"alternative_webui_enabled\"}\n                    color={\"#19a700\"}\n                />\n                <InputRow\n                    title={\"WebUI Path\"}\n                    icon={faAngleRight}\n                    objKey={\"alternative_webui_path\"}\n                    color={\"#0086a7\"}\n                />\n                <InputRow\n                    title={\"WebUI IP Address\"}\n                    icon={faWifi}\n                    objKey={\"web_ui_address\"}\n                    color={\"#7a00a7\"}\n                />\n                <InputRow\n                    title={\"WebUI Port\"}\n                    icon={faEthernet}\n                    objKey={\"web_ui_port\"}\n                    color={\"#b60049\"}\n                />\n                <SwitchRow\n                    title={\"WebUI UPnP Enabled\"}\n                    icon={faOutlet}\n                    objKey={\"web_ui_upnp\"}\n                    color={\"#ea9d00\"}\n                />\n                <InputRow\n                    title={\"WebUI Username\"}\n                    icon={faUser}\n                    objKey={\"web_ui_username\"}\n                    color={\"#0069ea\"}\n                />\n                <InputRow\n                    title={\"WebUI Password\"}\n                    icon={faKey}\n                    objKey={\"web_ui_password\"}\n                    color={\"#0069ea\"}\n                />\n            </List>\n            <Button className={\"danger\"} modifier={\"large--quiet\"}\n                onClick={()=> {\n                    window.location.reload();\n                    saveStorage(\"user\", {})\n                }}\n            >\n                Log Out\n            </Button>\n\n\n            <AlertDialog className={\"settingsAlert\"} isOpen={alert.open} onCancel={()=>setAlert({open: false})} modifier={\"rowfooter\"} cancelable>\n                <div className=\"alert-dialog-title\">{alert.label}</div>\n                <div className=\"alert-dialog-content\">\n                    <input ref={alertInput} type={\"text\"} defaultValue={preferences[alert.objKey]} placeholder={\"Enter \"+alert.label}/>\n                </div>\n                <div className=\"alert-dialog-footer\">\n                    <Button onClick={()=>setAlert({...alert,open: false})} className=\"alert-dialog-button\">\n                        Cancel\n                    </Button>\n                    <Button onClick={()=>{\n                        let updateJSON = {}\n                        updateJSON[alert.objKey] = alertInput.current.value\n\n                        updatePref(JSON.stringify(updateJSON)).then(()=>{\n                            setTimeout(()=>{\n                                setPrefsRefresh(true)\n                            },300)\n                        })\n                    }} className=\"alert-dialog-button\">\n                        Save\n                    </Button>\n                </div>\n            </AlertDialog>\n        </div>\n        )\n    }else{\n        return (\n            <div className={\"settingsCol\"}>\n                <h2 style={{textAlign:\"center\"}}>\n                    Settings require login.\n                </h2>\n            </div>\n        )\n    }\n}\n\nexport default Settings\n","import {Button, Icon, List, ListItem, Popover, Radio, ToolbarButton} from \"react-onsenui\";\nimport React, {useContext, useState} from \"react\";\nimport {addTorrent} from \"../utils/TorrClient\";\nimport {Context} from \"../App\";\n\n\nconst TorrentTopControls = (props) => {\n    const [addTorrentPopover, setAddTorrentPopover] = useState({\n        open: false,\n        target: null\n    })\n\n    const {settings, bigScreen, updateModal, updateAlert} = useContext(Context)\n\n    let AddButton = React.createRef()\n    let SortButton = React.createRef()\n\n    const [torrentURL, setTorrentURL] = useState(null)\n\n    const handleAddTorrent = () => {\n        addTorrent(torrentURL)\n            .then(response => {\n                console.log(response.data)\n                if (response.data === \"Ok.\") {\n                    updateAlert(\"Torrent Was Added\", \"This torrent was added successfully.\")\n                } else {\n                    updateAlert(\"Could Not Add Torrent\", \"This address could not be added.\")\n                }\n            }).catch(() => {\n            updateAlert(\"Could Not Add Torrent\", \"This address could not be added.\")\n        }).finally(() => {\n            setAddTorrentPopover({open: false, target: addTorrentPopover.target})\n        })\n    }\n\n\n    const AddTorrentModal = () => {\n        return (\n            <div className={\"modalAddTorrent\"}>\n                <h2>Enter Torrent URL</h2>\n                <textarea onChange={(event => setTorrentURL(event.target.value))} placeholder={\"URLs or Magnet links\"}\n                          rows={10}/>\n                <Button\n                    modifier={\"large--quiet\"}\n                    onClick={() => handleAddTorrent()}\n                >Add Torrent</Button>\n            </div>\n        )\n    }\n\n\n    const showAddPopover = () => {\n        if (bigScreen) {\n            setAddTorrentPopover({open: true, target: AddButton.current})\n        } else {\n            updateModal({\n                open: true,\n                content: <AddTorrentModal/>,\n                top: window.innerHeight / 2,\n            })\n        }\n    }\n\n    const [sortPopover, setSortPopover] = useState({open: false, selected: 0})\n\n    const showSortPopover = () => {\n        setSortPopover({open: true, selected: sortPopover.selected})\n    }\n\n    const SortingOptions = [\n        {\n            object: {\n                key: \"added_on\",\n                reverse: true\n            },\n            label: \"Added Latest Up Top\",\n        },\n        {\n            object: {\n                key: \"added_on\",\n                reverse: false\n            },\n            label: \"Added Oldest Up Top\",\n        },\n        {\n            object: {\n                key: \"name\",\n                reverse: false\n            },\n            label: \"Abc... Up Top\",\n        },\n        {\n            object: {\n                key: \"name\",\n                reverse: true\n            },\n            label: \"Zxy... Up Top\",\n        },\n    ]\n\n    const updateSorting = (object, key) => {\n        setSortPopover({open: false, selected: key})\n        props.updateSorting(object)\n    }\n\n    return (\n        <div>\n            <ToolbarButton\n                ref={SortButton}\n                onClick={() => showSortPopover()}\n            >\n                <Icon size={30} icon=\"ion-ios-list\"/>\n            </ToolbarButton>\n            <ToolbarButton\n                ref={AddButton}\n                onClick={() => showAddPopover()}\n            >\n                <Icon size={35} icon=\"ion-ios-add\"/>\n            </ToolbarButton>\n\n            <Popover\n                isOpen={addTorrentPopover.open}\n                onCancel={() => setAddTorrentPopover({open: false, target: addTorrentPopover.target})}\n                getTarget={() => addTorrentPopover.target}\n                className={\"AddTorrentPopover\"}\n            >\n                <p>Enter Torrent URL</p>\n                <textarea onChange={(event => setTorrentURL(event.target.value))} placeholder={\"URLs or Magnet links\"}\n                          rows={10}/>\n                <Button\n                    modifier={\"large--quiet\"}\n                    onClick={() => handleAddTorrent()}\n                >Add Torrent</Button>\n            </Popover>\n\n            <Popover\n                isOpen={sortPopover.open}\n                onCancel={() => setSortPopover({open: false, selected: sortPopover.selected})}\n                getTarget={() => SortButton.current}\n                className={\"SortTorrentPopover\"}\n            >\n                <List>\n                    {\n                        SortingOptions.map((option, key) =>\n                            <ListItem\n                                modifier={\"longdivider\"}\n                                key={key}\n                                onClick={() => updateSorting(option.object, key)}\n                            >\n                                <div>\n                                    <Radio name=\"color\" checked={key === sortPopover.selected}/>\n                                    {option.label}\n                                </div>\n                            </ListItem>\n                        )\n                    }\n                </List>\n            </Popover>\n        </div>\n    )\n}\n\nexport default TorrentTopControls;\n","import TorrentsCol from \"./TorrentsCol\";\nimport {Page, Tab, Tabbar, Toolbar} from \"react-onsenui\";\nimport Search from \"./Search\";\nimport Settings from \"./Settings\";\nimport React, {useContext, useState} from \"react\";\nimport {Context} from \"../App\"\nimport TorrentTopControls from \"./TorrentsTopControls\";\n\nconst Tabs = () => {\n    const [activeTab,setActiveTab] = useState(0)\n\n    const pageTitles = [\n        \"Your Torrents\",\n        \"Search\",\n        \"Settings\"\n    ]\n\n    const {settings,bigScreen} = useContext(Context);\n\n    const [sort,setSort] = useState({key: \"added_on\",reverse:true})\n\n    const updateSorting = (SortObj) => {\n        setSort(SortObj)\n    }\n\n    return (\n        <>\n            <Toolbar>\n                <div className=\"left\">\n                    <h1>\n                        {pageTitles[activeTab]}\n                    </h1>\n                </div>\n                <div className=\"right\">\n                    {settings.loggedin && !bigScreen && activeTab===0?\n                        <TorrentTopControls\n                            updateSorting={(obj)=>updateSorting(obj)}\n                        />\n                        :null\n                    }\n                </div>\n            </Toolbar>\n            <Tabbar\n                className={\"tabWrapper\"}\n                animation={\"none\"}\n                position='bottom'\n                onPreChange={({index}) => setActiveTab(index)}\n                index={activeTab}\n                renderTabs={(activeIndex) => [\n                    {\n                        content: <Page><TorrentsCol sortingObj={sort} title={pageTitles[0]} active={activeIndex === 0}/></Page>,\n                        tab: <Tab label=\"Torrents\" icon=\"ion-ios-download\"/>\n                    },\n                    {\n                        content: <Page><Search title={pageTitles[1]} active={activeIndex === 1}/></Page>,\n                        tab: <Tab label=\"Search\" icon=\"ion-ios-search\"/>\n                    },\n                    {\n                        content: <Page><Settings title={pageTitles[2]} active={activeIndex === 1}/></Page>,\n                        tab: <Tab label=\"Settings\" icon=\"ion-ios-cog\"/>\n                    },\n                ]\n                }\n            />\n        </>\n    )\n}\n\nexport default Tabs;\n","import TorrentsCol from \"./TorrentsCol\";\nimport {Icon, Page, Toolbar, ToolbarButton} from \"react-onsenui\";\nimport Search from \"./Search\";\nimport React, {useContext, useEffect, useState} from \"react\";\nimport { Context } from \"../App\"\nimport RoundLogo from \"../images/logo_round.png\"\nimport TorrentTopControls from \"./TorrentsTopControls\";\nimport Settings from \"./Settings\";\n\nconst TabletView = () => {\n\n    const {settings,updateModal} = useContext(Context)\n\n    const [sort,setSort] = useState({key: \"added_on\",reverse:true})\n\n    const updateSorting = (SortObj) => {\n        setSort(SortObj)\n    }\n\n    return (\n        <>\n            <Toolbar>\n                <div className=\"left tabletHeader\">\n                    <div>\n                        {settings.loggedin?<img className={\"loginImage-small\"} alt={\"iQbit Logo\"} src={RoundLogo}/>:null}\n                        <h1>iQbit</h1>\n                    </div>\n                    {settings.loggedin?\n                        <TorrentTopControls\n                            updateSorting={(obj)=>updateSorting(obj)}\n                        />\n                        :null\n                    }\n                </div>\n                <div className=\"right\">\n                    <ToolbarButton\n                        onClick={()=>updateModal({\n                            open:true,\n                            content:<Settings/>,\n                        })}\n                    >\n                        <Icon size={35} icon=\"ion-ios-cog\" />\n                    </ToolbarButton>\n                </div>\n            </Toolbar>\n            <Page>\n                <div className=\"tabletView\">\n                    <TorrentsCol\n                        sortingObj={sort}\n                    />\n                    <Search/>\n                </div>\n            </Page>\n        </>\n    )\n}\n\nexport default TabletView;\n","import { useState, useEffect } from 'react';\n\nfunction useWindowSize() {\n    // Initialize state with undefined width/height so server and client renders match\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n    const [windowSize, setWindowSize] = useState({\n        width: undefined,\n        height: undefined,\n    });\n\n    useEffect(() => {\n        // Handler to call on window resize\n        function handleResize() {\n            // Set window width/height to state\n            setWindowSize({\n                width: window.innerWidth,\n                height: window.innerHeight,\n            });\n        }\n\n        // Add event listener\n        window.addEventListener(\"resize\", handleResize);\n\n        // Call handler right away so state gets updated with initial window size\n        handleResize();\n\n        // Remove event listener on cleanup\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, []); // Empty array ensures that effect is only run on mount\n\n    return windowSize;\n}\n\nexport default useWindowSize;\n","import React, {useEffect, useState} from \"react\";\nimport Draggable from 'react-draggable';\nimport useWindowSize from \"../utils/useWindowSize\";\n\nconst BottomSheet = (props) => {\n\n    const WindowSize = useWindowSize();\n\n    const topDiff = props.top || 100;\n    const leftDiff = props.left || 0;\n    // const open = props.open;\n\n    const [open,setOpen] = useState(false)\n\n    useEffect(()=>{\n        if(props.open){\n            setOpen(true)\n        }else{\n            setOpen(false)\n        }\n    },[props])\n\n    const initialPosition = {x: 0, y: WindowSize.height}\n\n    const finalPosition = {\n        y: topDiff,\n        x: leftDiff,\n    }\n\n    const threshold = .25;\n\n    return (\n        <div className={open?\"BottomSheet open\":\"BottomSheet\"}>\n            <div\n                className={\"BottomSheetOverlay\"}\n                onClick={()=>props.onDismiss()}\n            />\n            <div>\n                <Draggable\n                    onClick={(event)=> {\n                        console.log(event)\n                        console.log('clicked inside')\n                    }}\n                    axis={\"y\"}\n                    handle={\".handleArea\"}\n                    defaultPosition={initialPosition}\n                    position={open?finalPosition:initialPosition}\n                    children={\n                        <div className={\"modal\"}>\n                            <span className={\"handleArea\"}><span className={\"handle\"}/></span>\n                            {props.children}\n                        </div>\n                    }\n                    bounds={{top:topDiff}}\n                    onStop={(event)=>{\n                        if(event.pageY > ( WindowSize.height - (WindowSize.height * threshold))){\n                            setOpen(false)\n                            setTimeout(()=>{\n                                props.onDismiss()\n                            },400)\n                        }\n                    }}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default BottomSheet\n","import {useState,useEffect} from \"react\";\n\nfunction useMedia(queries, values, defaultValue) {\n    // Array containing a media query list for each query\n    const mediaQueryLists = queries.map(q => window.matchMedia(q));\n\n    // Function that gets value based on matching media query\n    const getValue = () => {\n        // Get index of first media query that matches\n        const index = mediaQueryLists.findIndex(mql => mql.matches);\n        // Return related value or defaultValue if none\n        return typeof values[index] !== 'undefined' ? values[index] : defaultValue;\n    };\n\n    // State and setter for matched value\n    const [value, setValue] = useState(getValue);\n\n    useEffect(\n        () => {\n            // Event listener callback\n            // Note: By defining getValue outside of useEffect we ensure that it has ...\n            // ... current values of hook args (as this hook callback is created once on mount).\n            const handler = () => setValue(getValue);\n            // Set a listener for each media query with above handler as callback.\n            mediaQueryLists.forEach(mql => mql.addListener(handler));\n            // Remove listeners on cleanup\n            return () => mediaQueryLists.forEach(mql => mql.removeListener(handler));\n        },\n        [] // Empty array ensures effect is only run on mount and unmount\n    );\n\n    return value;\n}\n\nexport default useMedia;\n","import {useState} from \"react\";\n\nfunction useLocalStorage(key, initialValue) {\n    // State to store our value\n    // Pass initial state function to useState so logic is only executed once\n    const [storedValue, setStoredValue] = useState(() => {\n        try {\n            // Get from local storage by key\n            const item = window.localStorage.getItem(key);\n            // Parse stored json or if none return initialValue\n            return item ? JSON.parse(item) : initialValue;\n        } catch (error) {\n            // If error also return initialValue\n            console.log(error);\n            return initialValue;\n        }\n    });\n\n    // Return a wrapped version of useState's setter function that ...\n    // ... persists the new value to localStorage.\n    const setValue = value => {\n        try {\n            // Allow value to be a function so we have same API as useState\n            const valueToStore =\n                value instanceof Function ? value(storedValue) : value;\n            // Save state\n            setStoredValue(valueToStore);\n            // Save to local storage\n            window.localStorage.setItem(key, JSON.stringify(valueToStore));\n        } catch (error) {\n            // A more advanced implementation would handle the error case\n            console.log(error);\n        }\n    };\n\n    return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","import {useEffect} from \"react\";\nimport useMedia from \"./useMedia\"\nimport useLocalStorage from \"./useLocalStorage\"\n\nexport function useDarkMode() {\n    // Use our useLocalStorage hook to persist state through a page refresh.\n    // Read the recipe for this hook to learn more: usehooks.com/useLocalStorage\n    const [enabledState, setEnabledState] = useLocalStorage('dark-mode-enabled');\n\n    // See if user has set a browser or OS preference for dark mode.\n    // The usePrefersDarkMode hook composes a useMedia hook (see code below).\n    const prefersDarkMode = usePrefersDarkMode();\n\n    // If enabledState is defined use it, otherwise fallback to prefersDarkMode.\n    // This allows user to override OS level setting on our website.\n    const enabled =\n        typeof enabledState !== 'undefined' ? enabledState : prefersDarkMode;\n\n    // Fire off effect that add/removes dark mode class\n    useEffect(\n        () => {\n            const className = 'dark-mode';\n            const element = window.document.body;\n            if (enabled) {\n                element.classList.add(className);\n            } else {\n                element.classList.remove(className);\n            }\n        },\n        [enabled] // Only re-call effect when value changes\n    );\n\n    // Return enabled state and setter\n    return [enabled, setEnabledState];\n}\n\n// Compose our useMedia hook to detect dark mode preference.\n// The API for useMedia looks a bit weird, but that's because ...\n// ... it was designed to support multiple media queries and return values.\n// Thanks to hook composition we can hide away that extra complexity!\n// Read the recipe for useMedia to learn more: usehooks.com/useMedia\nexport function usePrefersDarkMode() {\n    return useMedia(['(prefers-color-scheme: dark)'], [true], false);\n}\n","import React, {useState, createContext, useEffect} from 'react';\nimport Tabs from './components/Tabs';\nimport TabletView from './components/TabletView';\nimport 'onsenui/css/onsenui.css';\nimport 'onsenui/css/onsen-css-components.css';\nimport './App.scss';\nimport { getStorage, saveStorage } from './utils/Storage';\nimport BottomSheet from \"./components/BottomSheet\";\nimport {getPrefs, login} from \"./utils/TorrClient\";\nimport {AlertDialog,Button} from \"react-onsenui\"\nimport {useDarkMode} from \"./utils/useDarkMode\"\n\nexport const Context = createContext(null);\n\nconst App = () => {\n\n    const [settings,setSettings] = useState({\n        loggedin:null,\n        username:null,\n        password:null\n    });\n\n    useEffect(()=>{\n        const settings = getStorage(\"user\")\n        let templateObject = settings;\n\n        if(settings === null){\n            templateObject = {\n                loggedin:false,\n                username:null,\n                password:null,\n            }\n            saveStorage(\"user\",templateObject)\n        }else{\n            setSettings(settings)\n        }\n    },[])\n\n    useDarkMode();\n\n    const screenWidth = window.innerWidth;\n    const breakpoint = 768;\n\n    const [bigScreen] = useState(screenWidth > breakpoint)\n    const installed =  window.matchMedia('(display-mode: standalone)').matches\n    const [prefs,setPrefs] = useState({\n        add_trackers: \"\",\n        add_trackers_enabled: null,\n        alt_dl_limit: null,\n        alt_up_limit: null,\n        alternative_webui_enabled: null,\n        alternative_webui_path: \"\",\n        announce_ip: \"\",\n        announce_to_all_tiers: null,\n        announce_to_all_trackers: null,\n        anonymous_mode: null,\n        async_io_threads: null,\n        auto_delete_mode: null,\n        auto_tmm_enabled: null,\n        autorun_enabled: null,\n        autorun_program: \"\",\n        banned_IPs: \"\",\n        bittorrent_protocol: null,\n        bypass_auth_subnet_whitelist: \"\",\n        bypass_auth_subnet_whitelist_enabled: null,\n        bypass_local_auth: null,\n        category_changed_tmm_enabled: null,\n        checking_memory_use: null,\n        create_subfolder_enabled: null,\n        current_interface_address: \"\",\n        current_network_interface: \"\",\n        dht: null,\n        disk_cache: null,\n        disk_cache_ttl: null,\n        dl_limit: null,\n        dont_count_slow_torrents: null,\n        dyndns_domain: \"\",\n        dyndns_enabled: false,\n        dyndns_password: \"\",\n        dyndns_service: null,\n        dyndns_username: \"\",\n        embedded_tracker_port: null,\n        enable_coalesce_read_write: null,\n        enable_embedded_tracker: null,\n        enable_multi_connections_from_same_ip: null,\n        enable_os_cache: null,\n        enable_piece_extent_affinity: null,\n        enable_upload_suggestions: null,\n        encryption: null,\n        export_dir: \"\",\n        export_dir_fin: \"\",\n        file_pool_size: null,\n        incomplete_files_ext: null,\n        ip_filter_enabled: null,\n        ip_filter_path: \"\",\n        ip_filter_trackers: null,\n        limit_lan_peers: null,\n        limit_tcp_overhead: null,\n        limit_utp_rate: null,\n        listen_port: null,\n        locale: \"\",\n        lsd: null,\n        mail_notification_auth_enabled: null,\n        mail_notification_email: \"\",\n        mail_notification_enabled: null,\n        mail_notification_password: \"\",\n        mail_notification_sender: \"\",\n        mail_notification_smtp: \"\",\n        mail_notification_ssl_enabled: false,\n        mail_notification_username: \"\",\n        max_active_downloads: null,\n        max_active_torrents: null,\n        max_active_uploads: null,\n        max_connec: null,\n        max_connec_per_torrent: null,\n        max_ratio: null,\n        max_ratio_act: null,\n        max_ratio_enabled: null,\n        max_seeding_time: null,\n        max_seeding_time_enabled: null,\n        max_uploads: null,\n        max_uploads_per_torrent: null,\n        outgoing_ports_max: null,\n        outgoing_ports_min: null,\n        pex: null,\n        preallocate_all: null,\n        proxy_auth_enabled: null,\n        proxy_ip: \"\",\n        proxy_password: \"\",\n        proxy_peer_connections: null,\n        proxy_port: null,\n        proxy_torrents_only: null,\n        proxy_type: null,\n        proxy_username: \"\",\n        queueing_enabled: null,\n        random_port: null,\n        recheck_completed_torrents: null,\n        resolve_peer_countries: null,\n        rss_auto_downloading_enabled:null,\n        rss_download_repack_proper_episodes:null,\n        rss_max_articles_per_feed:null,\n        rss_processing_enabled:null,\n        rss_refresh_interval:null,\n        rss_smart_episode_filters:\"\",\n        save_path: \"\",\n        save_path_changed_tmm_enabled: false,\n        save_resume_data_interval: null,\n        scan_dirs:{},\n        schedule_from_hour: null,\n        schedule_from_min: null,\n        schedule_to_hour: null,\n        schedule_to_min: null,\n        scheduler_days: null,\n        scheduler_enabled: false,\n        send_buffer_low_watermark: null,\n        send_buffer_watermark: null,\n        send_buffer_watermark_factor: null,\n        slow_torrent_dl_rate_threshold: null,\n        slow_torrent_inactive_timer: null,\n        slow_torrent_ul_rate_threshold: null,\n        socket_backlog_size: null,\n        start_paused_enabled: false,\n        stop_tracker_timeout: null,\n        temp_path: \"\",\n        temp_path_enabled: null,\n        torrent_changed_tmm_enabled: null,\n        up_limit: null,\n        upload_choking_algorithm: null,\n        upload_slots_behavior: null,\n        upnp: null,\n        use_https: null,\n        utp_tcp_mixed_mode: null,\n        web_ui_address: \"\",\n        web_ui_ban_duration: null,\n        web_ui_clickjacking_protection_enabled: null,\n        web_ui_csrf_protection_enabled: null,\n        web_ui_custom_http_headers: \"\",\n        web_ui_domain_list: \"\",\n        web_ui_host_header_validation_enabled: null,\n        web_ui_https_cert_path: \"\",\n        web_ui_https_key_path: \"\",\n        web_ui_max_auth_fail_count: null,\n        web_ui_port: null,\n        web_ui_secure_cookie_enabled: null,\n        web_ui_session_timeout: null,\n        web_ui_upnp: null,\n        web_ui_use_custom_http_headers_enabled: null,\n        web_ui_username: \"\"\n    });\n\n\n    const updateSettings = (settings) => {\n        setSettings(settings);\n    }\n\n    const [modal,setModal] = useState({\n        open:false,\n        content:null\n    })\n\n    const updateModal = (update = {open:true,content:<span/>}) => {\n        setModal(update)\n    }\n\n    useEffect(()=>{\n\n        if(settings.loggedin){\n            login({\n                username:settings.username,\n                password:settings.password\n            }).then(()=>{\n                getPrefs().then((response)=>{\n                    setPrefs(response)\n                })\n            })\n        }\n\n    },[settings,settings.loggedin, settings.password, settings.username])\n\n    const [alert,setAlert] = useState({\n        open:false,\n        title:null,\n        message:null\n    })\n\n    const updateAlert = (title,message) => {\n        setAlert({open:true,title,message})\n    }\n\n    const Alert = (props) =>{\n        return(\n            <AlertDialog isOpen={props.open} onCancel={()=>setAlert({open: false,title:alert.title,message:alert.message})} cancelable>\n                <div className=\"alert-dialog-title\">{props.title}</div>\n                <div className=\"alert-dialog-content\">\n                    {props.message}\n                </div>\n                <div className=\"alert-dialog-footer\">\n                    <Button onClick={()=>setAlert({open: false,title:alert.title,message:alert.message})} className=\"alert-dialog-button\">\n                        Ok\n                    </Button>\n                </div>\n            </AlertDialog>\n        )\n    }\n\n    return (\n        <Context.Provider value={{\n            settings,\n            updateSettings,\n            bigScreen,\n            modal,\n            updateModal,\n            installed,\n            updateAlert,\n            prefs,\n        }}\n        >\n            <div className={(settings.loggedin ? \"loggedin \":\" login \") + (installed ? \" installed\" : \"\")}>\n                {bigScreen ? <TabletView/> : <Tabs/>}\n                <BottomSheet  open={modal.open} onDismiss={()=>setModal({open: false})} top={modal.top?modal.top:bigScreen?25:85} children={modal.content}/>\n                <Alert open={alert.open} title={alert.title} message={alert.message} />\n            </div>\n        </Context.Provider>\n        );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo_round.651d9c54.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-YTS.fdd85bfb.svg\";","module.exports = __webpack_public_path__ + \"static/media/imagemissing.960d2bd1.png\";","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t135,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t136,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t137,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t138,\n\t\t18\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t139,\n\t\t19\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t140,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t141,\n\t\t20\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t142,\n\t\t21\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t143,\n\t\t22\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t144,\n\t\t23\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t145,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t146,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t147,\n\t\t24\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t148,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t149,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t150,\n\t\t25\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t151,\n\t\t26\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t152,\n\t\t27\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t153,\n\t\t28\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t154,\n\t\t29\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t155,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t156,\n\t\t15\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t157,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t158,\n\t\t30\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t159,\n\t\t31\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t160,\n\t\t32\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t161,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t162,\n\t\t17\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t163,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t164,\n\t\t33\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t165,\n\t\t34\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t166,\n\t\t35\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t167,\n\t\t36\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t168,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t169,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t170,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t171,\n\t\t37\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t172,\n\t\t16\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t173,\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t174,\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t175,\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t176,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t177,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 83;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}